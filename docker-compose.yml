version: '3.7'
services:
  db:
    container_name: dev_db
    image: postgres:13.0-alpine
    restart: always
    env_file: ./.env.db
    volumes:
      - ./db/pg_data:/var/lib/postgresql/data/
      - ./db/restore/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    expose:
      - "5432"
    networks:
      - elk

  redis:
    container_name: redis
    image: redis:alpine



  els:
    container_name: elasticDB
    image: elasticsearch:7.13.0
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms200m -Xmx200m"
      xpack.security.enabled: "false"
    volumes:
      - ./db/es_data:/usr/share/elasticsearch/data
    expose:
      - "9200"
    healthcheck:
      test: curl -s curl http://localhost:9200/_cluster/health?pretty
      interval: 30s
      timeout: 10s
      retries: 50
    networks:
      - elk

  etl:
    container_name: etl
    build: ./etl
    env_file: ./.env
    entrypoint: /opt/app/run_etl.sh
    depends_on:
        - db
        - els
    networks:
      - elk

  kibana:
    container_name: kibana
    image: kibana:7.13.0
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - els
    expose:
      - "5601"
    networks:
      - elk

  fastapi:
    container_name: fastapi
    build: ./fastapi_srv
    env_file: ./.env
    expose:
      - "8001"
    depends_on:
      - redis
      - els
      - etl
    networks:
      - elk

  nginx:
    container_name: dev_web
    restart: on-failure
    image: nginx:latest
    volumes:
      - ./nginx_conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx_conf/configs:/etc/nginx/conf.d:ro
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: movies_api
    ports:
      - "80:80"
    depends_on:
      - fastapi
    networks:
      - elk


volumes:
  db:

networks:
  elk:
    name: elk
    driver: bridge
